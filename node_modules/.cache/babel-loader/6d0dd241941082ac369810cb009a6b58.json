{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\T-Gamer\\\\Documents\\\\Projetos\\\\Programming Projects\\\\React Projects\\\\Unirio Projects\\\\pet-cemetery-git\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { CompoundComponentContext } from './useCompound';\n\n/**\r\n * Registers a child component with the parent component.\r\n *\r\n * @param id A unique key for the child component. If the `id` is `undefined`, the registration logic will not run (this can sometimes be the case during SSR).\r\n * @param itemMetadata Arbitrary metadata to pass to the parent component. This should be a stable reference (e.g. a memoized object), to avoid unnecessary re-registrations.\r\n * @param missingKeyGenerator A function that generates a unique id for the item.\r\n *   It is called with the set of the ids of all the items that have already been registered.\r\n *   Return `existingKeys.size` if you want to use the index of the new item as the id.\r\n *\r\n * @ignore - internal hook.\r\n */\n\nexport function useCompoundItem(id, itemMetadata, missingKeyGenerator) {\n  var context = React.useContext(CompoundComponentContext);\n  if (context === null) {\n    throw new Error('useCompoundItem must be used within a useCompoundParent');\n  }\n  var registerItem = context.registerItem;\n  var _React$useState = React.useState(id),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    registeredId = _React$useState2[0],\n    setRegisteredId = _React$useState2[1];\n  useEnhancedEffect(function () {\n    var _registerItem = registerItem(id, itemMetadata, missingKeyGenerator),\n      returnedId = _registerItem.id,\n      deregister = _registerItem.deregister;\n    setRegisteredId(returnedId);\n    return deregister;\n  }, [registerItem, itemMetadata, missingKeyGenerator, id]);\n  return {\n    id: registeredId,\n    index: registeredId !== undefined ? context.getItemIndex(registeredId) : -1,\n    totalItemCount: context.totalSubitemCount\n  };\n}","map":null,"metadata":{},"sourceType":"module"}